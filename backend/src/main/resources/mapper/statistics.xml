<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.prossafy101.ohnaco.repository.StatisticsRepository">
    <select id="getTotalTime" parameterType="hashmap" resultType="Long">
        SELECT IFNULL((sum(TIME_TO_SEC(completetime))),0) as 'totalcompletetime'
        from todo
        where date BETWEEN #{startDate} and #{endDate} and userid=#{userid}
    </select>

    <select id="getCategoryTime" parameterType="hashmap" resultType="StatisticsCategoryDto">
        SELECT c.categoryname as categoryname , IFNULL((sum(TIME_TO_SEC(goaltime))),0)  as 'goaltime', IFNULL((sum(TIME_TO_SEC(completetime))),0)  as 'completetime'
        from todo t join category c on(t.categoryid=c.categoryid)
        where date BETWEEN #{startDate} and #{endDate} and userid=#{userid} group by c.categoryid;
    </select>

    <select id="getPositionTime" parameterType="hashmap" resultType="StatisticsPositionDto">
        select c.categoryname , IFNULL((round(sum(TIME_TO_SEC(completetime)) / (select count(*) from user where positionid = #{positionid}))),0)  as 'time'
        from todo t join category c on (t.categoryid = c.categoryid)
        where date BETWEEN #{startDate} and #{endDate} and userid in (select userid from user where positionid = #{positionid})
        group by t.categoryid
    </select>

    <select id="getEntireCategoryTime" parameterType="hashmap" resultType="StatisticsPositionDto">
        select c.categoryname , IFNULL((round(sum(TIME_TO_SEC(completetime)) / (select count(*) from user ))),0) as 'time'
        from todo t join category c on (t.categoryid = c.categoryid)
        where date BETWEEN #{startDate} and #{endDate}
        group by t.categoryid
    </select>

    <select id="getTotalTimeForDays" parameterType="hashmap" resultType="map" >
        select DATE(date) as date, IFNULL((round(sum(TIME_TO_SEC(completetime)) / (select count(*) from user))),0)  as 'time'
        from todo
        group by DATE(date)
        having date BETWEEN #{startDate} and #{endDate}
    </select>

    <select id="getPositionTimeForDays" parameterType="hashmap" resultType="map" >
        select DATE(date) as date, IFNULL((round(sum(TIME_TO_SEC(completetime)) / (select count(*) from user where positionid = #{positionid}))),0)  as 'time'
        from todo
        where userid in (select userid from user where positionid = #{positionid})
        group by DATE(date)
        having date BETWEEN #{startDate} and #{endDate}
    </select>

    <select id="getMyTimeForDays" parameterType="hashmap" resultType="map" >
        select DATE(date) as date, IFNULL((sum(TIME_TO_SEC(completetime))),0)  as 'time'
        from todo
        where userid = #{userid}
        group by DATE(date)
        having date BETWEEN #{startDate} and #{endDate}
    </select>

    <select id="getMyTimeForWeeks" parameterType="hashmap" resultType="map" >
        select DAYOFWEEK(date) as day, (avg(TIME_TO_SEC(completetime))) as 'time'
        from todo
        where userid = #{userid} AND date BETWEEN #{startDate} and #{endDate}
        group by DAYOFWEEK(date)
    </select>

    <select id="getTotalTimeForWeeks" parameterType="hashmap" resultType="map" >
        select DAYOFWEEK(date) as day, (avg(TIME_TO_SEC(completetime))) as 'time'
        from todo
        where date BETWEEN #{startDate} and #{endDate}
        group by DAYOFWEEK(date)
    </select>

    <select id="getPositionTimeForWeeks" parameterType="hashmap" resultType="map" >
        select DAYOFWEEK(date) as day, (avg(TIME_TO_SEC(completetime))) as 'time'
        from todo
        where userid = #{userid} AND date BETWEEN #{startDate} and #{endDate}
        group by DAYOFWEEK(date)
    </select>

</mapper>